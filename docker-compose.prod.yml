services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-available:/etc/nginx/sites-enabled
      - ./nginx/ssl-params.conf:/etc/nginx/ssl-params.conf
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      # For SSL certificates (uncomment in production)
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    restart: unless-stopped

  web:
    build: .
    command: sh -c "gunicorn --bind 0.0.0.0:8000 --workers 2 --threads 4 --worker-class gthread --log-level warning --access-logfile $${GUNICORN_ACCESS_LOGFILE:-/dev/null} --error-logfile $${GUNICORN_ERROR_LOGFILE:--} verionlabs_django.wsgi:application"
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "8002:8000"
    env_file:
      - .env.production
    restart: unless-stopped
    depends_on:
      - db
      - redis

  # Celery worker for background tasks (production)
  celery_worker:
    build: .
    command: celery -A verionlabs_django worker --loglevel=warning --concurrency=4 --max-tasks-per-child=1000
    volumes:
      - ./media:/app/media
    env_file:
      - .env.production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Celery beat for scheduled tasks (production)
  celery_beat:
    build: .
    command: celery -A verionlabs_django beat --loglevel=warning --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=/tmp/celerybeat.pid
    volumes:
      - ./media:/app/media
    env_file:
      - .env.production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Redis for Celery broker (production)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    ports:
      - "6381:6379"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  db:
    image: postgres:13
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: website_production_db
      POSTGRES_USER: website_prod_user
      POSTGRES_PASSWORD: "OhP6*dO69bj0z0:D`Q:{!"
    restart: unless-stopped
    ports:
      - "5434:5432"

volumes:
  postgres_prod_data:
  redis_prod_data: